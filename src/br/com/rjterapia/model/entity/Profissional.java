package br.com.rjterapia.model.entity;

// Generated 19/02/2015 15:53:21 by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Profissional generated by hbm2java
 */
@Entity
@Table(name = "profissional")
public class Profissional implements java.io.Serializable {

	private Integer id;
	private AreaAtuacao areaAtuacao;
	private Clinica clinica;
	private Plano plano;
	private TipoProfissional tipoProfissional;
	private String descricao;
	private String destaque;
	private Date dtInat;
	private Date dtIncl;
	private String nome;
	private Set<Usuario> usuarios = new HashSet<Usuario>(0);
	private Set<Foto> fotos = new HashSet<Foto>(0);
	private Set<Visualizacao> visualizacaos = new HashSet<Visualizacao>(0);
	private Set<HistoricoPagamento> historicoPagamentos = new HashSet<HistoricoPagamento>(
			0);
	private Set<Avaliacao> avaliacaos = new HashSet<Avaliacao>(0);
	private Set<Contato> contatos = new HashSet<Contato>(0);
	private long totalVotos;
	private long diasCadastrados;

	public Profissional() {
	}

	public Profissional(AreaAtuacao areaAtuacao, Plano plano,
			TipoProfissional tipoProfissional) {
		this.areaAtuacao = areaAtuacao;
		this.plano = plano;
		this.tipoProfissional = tipoProfissional;
	}

	public Profissional(AreaAtuacao areaAtuacao, Clinica clinica, Plano plano,
			TipoProfissional tipoProfissional, String descricao,
			String destaque, Date dtInat, Date dtIncl, String nome,
			Set<Usuario> usuarios, Set<Foto> fotos,
			Set<Visualizacao> visualizacaos,
			Set<HistoricoPagamento> historicoPagamentos,
			Set<Avaliacao> avaliacaos) {
		this.areaAtuacao = areaAtuacao;
		this.clinica = clinica;
		this.plano = plano;
		this.tipoProfissional = tipoProfissional;
		this.descricao = descricao;
		this.destaque = destaque;
		this.dtInat = dtInat;
		this.dtIncl = dtIncl;
		this.nome = nome;
		this.usuarios = usuarios;
		this.fotos = fotos;
		this.visualizacaos = visualizacaos;
		this.historicoPagamentos = historicoPagamentos;
		this.avaliacaos = avaliacaos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "area_atuacao_id", nullable = false)
	public AreaAtuacao getAreaAtuacao() {
		return this.areaAtuacao;
	}

	public void setAreaAtuacao(AreaAtuacao areaAtuacao) {
		this.areaAtuacao = areaAtuacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "clinica_id")
	public Clinica getClinica() {
		return this.clinica;
	}

	public void setClinica(Clinica clinica) {
		this.clinica = clinica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "plano_id", nullable = false)
	public Plano getPlano() {
		return this.plano;
	}

	public void setPlano(Plano plano) {
		this.plano = plano;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tipo_profissional_id", nullable = false)
	public TipoProfissional getTipoProfissional() {
		return this.tipoProfissional;
	}

	public void setTipoProfissional(TipoProfissional tipoProfissional) {
		this.tipoProfissional = tipoProfissional;
	}

	@Column(name = "descricao")
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "destaque")
	public String getDestaque() {
		return this.destaque;
	}

	public void setDestaque(String destaque) {
		this.destaque = destaque;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_inat", length = 19)
	public Date getDtInat() {
		return this.dtInat;
	}

	public void setDtInat(Date dtInat) {
		this.dtInat = dtInat;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_incl", length = 19)
	public Date getDtIncl() {
		return this.dtIncl;
	}

	public void setDtIncl(Date dtIncl) {
		this.dtIncl = dtIncl;
	}

	@Column(name = "nome", length = 45)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "profissional")
	public Set<Usuario> getUsuarios() {
		return this.usuarios;
	}

	public void setUsuarios(Set<Usuario> usuarios) {
		this.usuarios = usuarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "profissional")
	public Set<Foto> getFotos() {
		return this.fotos;
	}

	public void setFotos(Set<Foto> fotos) {
		this.fotos = fotos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "profissional")
	public Set<Visualizacao> getVisualizacaos() {
		return this.visualizacaos;
	}

	public void setVisualizacaos(Set<Visualizacao> visualizacaos) {
		this.visualizacaos = visualizacaos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "profissional")
	public Set<HistoricoPagamento> getHistoricoPagamentos() {
		return this.historicoPagamentos;
	}

	public void setHistoricoPagamentos(
			Set<HistoricoPagamento> historicoPagamentos) {
		this.historicoPagamentos = historicoPagamentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "profissional")
	public Set<Avaliacao> getAvaliacaos() {
		return this.avaliacaos;
	}

	public void setAvaliacaos(Set<Avaliacao> avaliacaos) {
		this.avaliacaos = avaliacaos;
	}

	@Transient
	public long getTotalVotos() {
		return totalVotos;
	}

	public void setTotalVotos(long totalVotos) {
		this.totalVotos = totalVotos;
	}

	@Transient
	public long getDiasCadastrados() {
		Date now = new Date();
		long diferenca = now.getTime() - dtIncl.getTime();
		diasCadastrados = diferenca/1000/60/60/24;
		return diasCadastrados;
	}

	public void setDiasCadastrados(long diasCadastrados) {
		this.diasCadastrados = diasCadastrados;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "profissional")
	public Set<Contato> getContatos() {
		return contatos;
	}

	public void setContatos(Set<Contato> contatos) {
		this.contatos = contatos;
	}

}
